Testing throughout the software development cycle.

ISTQB - international software testing qualifications board

---------------------

SDLC - Software development life cycle.
- a systematic plan for the project
- smooth progress
- lower cost

A model that describes the type of activity performed at each stage in the software development project, and how the activities relate to one another logically and chronologically

Two types of models
- sequential
- Iterative

stages
- Analysis
- Design
- Development
- Testing
- Deployment
- Maintenance

Iterative works on a basis of short term "time cycles" i.e. what can we do in the nex 2 weeks.

Models are implications of reality
Iterative is not better than iterative
Different models can be mixed e.g. front end and back end are done differently

---------------------

Test Levels - testing small units to testing the whole

Component testing - testing the smallest units
integration testing - testing units added gradually to each other
system testing - testing the whole through an interface
Acceptance testing - given to the end user to see if it meets their criteria


---------------------

Comparing Test Types - group of test activities aimed at specific characteristics of the system

Functional
- tests functionality
- does it work as expected
- does the unit/integration/system/UI work as expected
- Coverage is the degree which an application is tested as a percent
- - How many of your tests work as a percent
- - Coverage gap - The number of tests/features not passed testing/no testing exists
Non-functional
- Answers the How fast/secure/easy to use the functions are to use

Black-box
- don't know about the internals of the software, just the requirement documentation.
- verify input and output of the box in various environments
- performance test als can be done by timing input/outputs

White-box
- Testing a box/system while also knowing the internal workings.
- like black box but often by the dev

Change related testing
- conformation testing check to see if a bugfix works as intended in it's specific area
- Regression is a bug that occurs due to a bug fix
- regression testing checks th system for regressions
- Test automations allow tests to be run and rerun at fast speeds to check a whole system.
- Bugfix, new feature, changing existing feature, change in config or environment all can create regressions.

-------------------------------

- a test may be a combination of above terms eg. black-box functional confirmation testing
- All are applicable but focus on the one that matters most for the context.

-------------------------------

Maintenance phase

- Change categories
- Planned
- - Software enhancements
- - Operational and environmental upgrades
- - Retirement (rewriting in newer tech)
- Unplanned
- - Bugs or failures in production
- - Hotfixes required

Impact analysis
- What, where a change takes place
- Which parts are defiantly/likely to be affected
- under time constraints, impact analysis tells which parts to prioritize
- 











